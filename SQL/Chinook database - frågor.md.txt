# SQL - Chinook database

Det som står inom parantes är de kolumner som ska hämtas. T.ex i fråga 3 så ska bara ArtistName-kolumnen hämtas.

## 1)

Öppna databasservern på din dator:

 	(localdb)\mssqllocaldb

Detta kan du göra från Visual Studio och välja *SQL Server Object Explorer*.

Alternativ: använd programmet *SQL Management Studio*. Välj File => Connect Object Explorer. 

Kör Chinook-scriptet för att skapa musik-databasen

## 2)

Lista all info om alla artister

    select * from Artist


## 3)

Lista alla artisters namn. Sortera på namn. (ArtistName)

	SELECT name
FROM Artist
ORDER BY name

## 4)

Lista de 10 första artisterna, sorterat på namn. (ArtistId, Name)

SELECT top 10 *from Artist
order by Name


## 5)

Lista alla artister som börjar på "Academy" (Name)
SELECT name
FROM Artist
where name like 'academy%'


## 6)

Lista alla album där den andra bokstaven i titeln är “a” och den tredje bokstaven är “r”
(Title)
SELECT Title
FROM Album

WHERE title LIKE '_a%' and  title LIKE '__r%'


## 7)

Lista alla album där första bokstaven på titeln är en vokal
SELECT Title
FROM Album

WHERE title LIKE 'a%' or title like 'o%' or title like 'u%'or title like 'e%' or title like 'i%'or title like 'y%'

## 8)

Lista alla album tillsammans med artister för albumen (ArtistName, AlbumTitle)
SELECT Title, name
FROM Album, Artist

## 9)

Förklara skillnaden mellan
- inner join:
The INNER JOIN keyword selects records that have matching values in both tables.
- left join: 
The LEFT JOIN keyword returns all records from the left table (table1), and the matched records from the right table (table2). The result is NULL from the right side, if there is no match.
- right join:
The RIGHT JOIN keyword returns all records from the right table (table2), and the matched records from the left table (table1). The result is NULL from the left side, when there is no match.
- full join:
The FULL OUTER JOIN keyword return all records when there is a match in either left (table1) or right (table2) table records.

## 10)

Lista de 10 artister som släppt flest album (NrOfAlbums, ArtistName)
SELECT top 10 Artist.name, COUNT(*) as AntalAlbum
From Artist
join Album
on Artist.ArtistId =Album.ArtistId
group by Name
order by AntalAlbum desc 

## 11)

Lista namn på alla album som är Jazz eller Blues. Ett album ska bara finnas i listan en gång. (AlbumTitle)

SELECT DISTINCT Genre.Name,title
From Genre
join Track on Genre.GenreId =Track.GenreId
join Album on Track.AlbumId=Album.AlbumId

WHERE Genre.Name='Jazz' or Genre.Name='Blues';



## 12)

Albumet "Let There Be Rock" (av AC/DC) innehåller 8 låtar. Modifiera databasen så det går att ordna låtar i nummerordning. 

Uppdatera sedan databasen så låtarna i "Let There Be Rock" är numrerade från 1 till 8.

SELECT DISTINCT TrackId, Name, Title, AlbumNumberOrder
From Track
join Album on Album.AlbumId =Track.AlbumId

where title = 'Let There Be Rock'
order by  AlbumNumberOrder 

--ALTER TABLE Track
--ADD AlbumNumberOrder int;

UPDATE Track
SET AlbumNumberOrder=1
WHERE TrackId=16;

UPDATE Track
SET AlbumNumberOrder=2
WHERE TrackId=22;
 
 UPDATE Track
SET AlbumNumberOrder=3
WHERE TrackId=15;

UPDATE Track
SET AlbumNumberOrder=4
WHERE TrackId=20;

UPDATE Track
SET AlbumNumberOrder=5
WHERE TrackId=19;

UPDATE Track
SET AlbumNumberOrder=6
WHERE TrackId=17;

UPDATE Track
SET AlbumNumberOrder=7
WHERE TrackId=18;

UPDATE Track
SET AlbumNumberOrder=8
WHERE TrackId=21;


## 13)

Skriv en sqlfråga som visar de genres som är mest populära. 

Lista genre och antal tracks i den genren. Visa den genre som har flest tracks först och sedan i nedåtstigande ordning. Visa endast de genres som har fler än 100 tracks.
(GenreName, NrOfTracks)

SELECT Genre.Name, COUNT(*) as nrOfTracks
From Genre
join Track on Genre.GenreId=Track.GenreId
group by Genre.Name
having COUNT(*)>100
order by nrOfTracks desc 


## 14)

Skapa en variabel som sparar CustomerId utifrån kunden "Leonie Köhler"

Använd denna variabel för att lista alla datum när en faktura till Leonie Köhler gått iväg
(InvoiceDate)


declare @getCustomerId int=(
select CustomerId
from Customer
where FirstName='Leonie' and LastName ='Köhler'
)

select invoicedate
from Invoice
where CustomerId=@getCustomerId

## 15)

Skapa en temporär tabell #CustomerWithSupport som innehåller förnamn och efternamn på en kund och dess supportpersonal 
(CustomerFirstName, CustomerLastName, SupportFirstName, SupportLastName)

create table #CustomerWithSupport
(
    CustomerFirstName Varchar(50),
    CustomerLastName Varchar(50), 
    SupportFirstName Varchar(50), 
    SupportLastName Varchar(50),   
)

## 16)

Lista alla anställda som har en chef och deras chef.

Resultatet ska vara två kolumner (ej 4) med den anställdes och chefens fullständiga namn

(EmployeeName, BossName)

select emp.FirstName + ' '+ emp.LastName employee, boss.FirstName + ' '+ boss.LastName manager
from employee emp
join employee boss on emp.ReportsTo=boss.EmployeeId
order by boss.LastName, emp.LastName



## 17)

Ta reda på hur många tecken den längsta epostadressen har bland alla kunder
(LongestMail)

select MAX (LEN(email))as LongestEmail
From Customer
 
 om vi även vill se mejladressen:
 select top 1 LEN(email)as LongestEmail,  email
From Customer
order by LongestEmail desc


## 18)

Ta reda på den eller de låtar som pågår längst tid
Resultatet ska vara en rad med låttitel och längden på låten
(Name, Minutes)

select top 1 track.name, ROUND( milliseconds*( 1.6666666666667E-5),0)
from Track
join MediaType on MediaType.MediaTypeId=Track.MediaTypeId
where MediaType.Name!='Protected MPEG-4 Video file'
order by Milliseconds desc, Name

alt:

select top 1 track.name, ROUND( milliseconds*( 1.6666666666667E-5),0)
from Track
where not MediaTypeId=3
order by Milliseconds desc, Name


## 19)

Skriv ett script som gör en av kolumner i Customer unique. Motivera ditt val 

ALTER TABLE Customer
ADD UNIQUE (Email);

-lskapar en unik kolumn där dubbletter ej kan finnas 


## 20)

Lista hur mycket som har fakturerat för varje år (2009-2013). Sortera så senaste åren visas först (2013)
(Year, Sum)

select year (invoicedate) as år, sum (total) as summa
From Invoice
group by year (invoice.InvoiceDate) 
order by år desc


## 21)
 
Ta fram längsta spellistan. (Name, TotalLengthInHours)

select top 1 p.Name, p.PlaylistId,Round( sum (T.Milliseconds)/1000.0 /60/60,1) as [Hours]
from
Playlist as P
join PlaylistTrack as PT on 
P.PlaylistId=PT.PlaylistId
join Track as T on 
PT.TrackId=T.TrackId
group by P.PlaylistId, p.Name
order by  [Hours] desc

för att få med endast en decimal:
select top 1 p.Name, p.PlaylistId,CAST( sum (T.Milliseconds)/1000.0 /60/60 as Decimal (4,1)) as [Hours]
from
Playlist as P
join PlaylistTrack as PT on 
P.PlaylistId=PT.PlaylistId
join Track as T on 
PT.TrackId=T.TrackId
group by P.PlaylistId, p.Name
order by  [Hours] desc

   
## 22)

Lista alla anställda som har en chef och deras chefs chef. (EmployeeName, BossesBossName)

select emp.FirstName + ' '+ emp.LastName employee, bossboss.FirstName + ' '+ bossboss.LastName bossboss
from employee emp
join employee boss on emp.ReportsTo=boss.EmployeeId
join employee bossboss on boss.ReportsTo=bossboss.EmployeeId
order by bossboss.LastName, emp.LastName


## 23)


Lägg till en tabell Review kopplad till Album

Lägg sedan till en review på albumet "Black Sabbath" (mha insert into...)

create table Review(

ReviewId int,
ReviewText varchar(1000),
AlbumId int,
)

declare @albumId int = (select AlbumId from Album where Title='Black Sabbath')

insert into Review (ReviewId, ReviewText, AlbumId)
values (1, 'bla bla blss', @albumId)

select * from Review



## Extra

## 1)

Hitta på två egna uppgifter som bygger på att data ska hämtas (via SELECT)

Lös uppgifterna.

Visa för din lärare.

## 2)

Hitta på två egna uppgifter som bygger på att data ska modifieras (via INSERT, UPDATE, DELETE)

Lös uppgifterna.

Visa för din lärare.

## 3)

Gör en backup av databasen Chinook till en fil. Ta bort alla spellistor.
Skriv en sql-fråga för att visa att spellistorna är borta

Gör sedan en restore av databasen så spellistorna kommer tillbaka.
Skriv en sql-fråga för att visa att spellistorna är tillbaka


## 4)

Använd transaktioner för att lösa denna uppgift.

Lägg till 5 artister i Artist-tabellen.

Ångra sedan transaktionen så de 5 artisterna inte läggs in. (använd alltså inte "delete" i denna uppgift)


## 5) 

(Svår!)

Kolumnen AlbumId har datatypen int, vilket kan vara onödigt generöst.

Välj en annan datatyp som är mer begränsande.

Skriv ett script som ändrar datatypen (och tar hänsyn till index och nycklar)

Scriptet ska kunna köras i ett svep.